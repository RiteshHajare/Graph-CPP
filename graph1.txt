
#include <iostream>
#include <vector>
using namespace std;

class Edge
{
public:
    int src;
    int dest;
    int wt;
    Edge(int s, int d, int w)
    {
        src = s;
        dest = d;
        wt = w;
    }
};

void createGraph(vector<vector<Edge>> &graph)
{
    // for(int i=0;i<graph.size();i++){
    //     graph[i] =vector<Edge>();
    // }
    graph[0].push_back(Edge(0, 2, 2));
    graph[1].push_back(Edge(1, 2, 10));
    graph[1].push_back(Edge(1, 3, 0));
    graph[2].push_back(Edge(2, 0, 2));
    graph[2].push_back(Edge(2, 1, 10));
    graph[2].push_back(Edge(2, 3, -1));
    graph[3].push_back(Edge(3, 1, 0));
    graph[3].push_back(Edge(3, 2, -1));
}

int main()
{
    int V = 4;
    vector<vector<Edge>> graph(V, vector<Edge>());
    createGraph(graph);
    for (int i = 0; i < graph[2].size(); i++)
    {
        Edge e = graph[2][i];
        cout << e.dest << " ," << e.wt << " " << endl;
        ;
    }
    return 0;
}